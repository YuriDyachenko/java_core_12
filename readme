- - - - - - - - - - - - - - - - - - - ЗАДАНИЕ - - - - - - - - - - - - - - - - - - -

Необходимо написать два метода, которые делают следующее:
1) Создают одномерный длинный массив, например:
    static final int SIZE = 10_000_000;
    static final int HALF = SIZE / 2;
    float[] arr = new float[SIZE];
2) Заполняют этот массив единицами.
3) Засекают время выполнения: long a = System.currentTimeMillis().
4) Проходят по всему массиву и для каждой ячейки считают новое значение по формуле:
    arr[i] = (float)(arr[i] * Math.sin(0.2f + i / 5) * Math.cos(0.2f + i / 5) * Math.cos(0.4f + i / 2));
5) Проверяется время окончания метода System.currentTimeMillis().
6) В консоль выводится время работы: System.out.println(System.currentTimeMillis() - a).
Отличие первого метода от второго:
    Первый просто бежит по массиву и вычисляет значения.
    Второй разбивает массив на два массива, в двух потоках высчитывает новые значения и потом склеивает
эти массивы обратно в один.
По замерам времени:
    Для первого метода надо считать время только на цикл расчета.
    Для второго метода замеряете время разбивки массива на 2, просчета каждого из двух массивов и склейки.

- - - - - - - - - - - - - - - - - - - ВЫВОД В КОНСОЛЬ - - - - - - - - - - - - - - - - - - -

----- один поток -----
старт...
стоп через 7249
----- два отдельных потока -----
старт...
стоп через 3861
в т.ч.:
  разделение = 36
  расчет = 3817
  склеивание = 8
----- главный + дополнительный поток -----
старт...
стоп через 3803
в т.ч.:
  разделение = 58
  расчет = 3738
  склеивание = 7
----- два отдельных потока, один массив -----
старт...
стоп через 3845
----- сравниваем массивы (Arrays.equals) -----
один поток == два отдельных потока: true
один поток == главный + дополнительный поток: true
один поток == два отдельных потока, один массив: true
